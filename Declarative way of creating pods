First create .yaml file 
eg :
apiVersion: v1
kind: Pod
metadata:
  name: mysqlpod
  labels:
    type: database
  namespace: nisha
spec:
  containers:
    - name: mysqlcontainer
      image: mysql.5.7

commands : 

kubectl create -f <file.yaml>                         → Create resources defined in the YAML file.
kubectl get pods -n <namespace>                       → List all pods in the specified namespace.
kubectl get pods -n <namespace> -o=wide               → List all pods with detailed information (IP, node, etc.) in the namespace.
kubectl get pods <podname> -n <namespace> -o=wide     → Get detailed information of a specific pod in the namespace.
kubectl get pods -n <namespace> -o=yaml               → Get the full YAML output of all pods in the namespace.
kubectl delete -f <file.yaml>                         → Delete resource defined in the YAML file.
kubectl get pods -n <namespace> -o=yaml > y1.yaml     → required yaml conents will be added in y1.yaml
kubectl exec -it <podname> -n <namespace> -- sh       → to go inside running pod
kubectl expose pod/mypod1 -n nisha --type="NodePort" --port=8081 --target-port=80  → Expose pod `mypod1` in namespace `nisha` as a NodePort service, mapping service port 8081 to container port 80.
minikube service nginx01 -n nisha --url               → Get the external URL of the service `nginx01` running in namespace `nisha` (accessible from browser).

